/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package finalproyecto;

import static finalproyecto.Mathe.Principalpanel;
import java.awt.BorderLayout;

/**
 *
 * @author Sergio Orozco
 */
public class multpolimono extends javax.swing.JPanel {

    /**
     * Creates new form multpolimono
     */
    public multpolimono() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(51, 204, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(153, 230, 225));

        jLabel1.setFont(new java.awt.Font("Palatino Linotype", 1, 18)); // NOI18N
        jLabel1.setText("Multiplicación de Polinomios por Monomios ");

        jButton2.setFont(new java.awt.Font("Palatino Linotype", 0, 14)); // NOI18N
        jButton2.setText("Multiplicación algebraica");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 665, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 534, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(260, 260, 260))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jButton2))
        );

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1650, -1));

        jLabel2.setFont(new java.awt.Font("Palatino Linotype", 0, 18)); // NOI18N
        jLabel2.setText("<html>En este caso se trata de un monomio que debe multiplicar a todo un polinomio.  El procedimiento es sencillo pues se trata de aplicar lo que aprendimos anteriormente, con la única diferencia de que cada término que forma parte del polinomio que se va a multiplicar, debe ser multiplicado “uno a uno”<p>por el monomio multiplicador.Teniendo claro lo anterior los pasos a seguir son los siguientes: <html>");
        jLabel2.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 1230, 100));

        jLabel4.setFont(new java.awt.Font("Palatino Linotype", 0, 18)); // NOI18N
        jLabel4.setText("<html>1. Se aplica ley de signos, entre el monomio multiplicador y cada uno de los términos que se van operando<p>2. Se multiplican los coeficientes numerales entre sí<p>3. Los coeficientes literales que son semejantes se copian una sola vez, y se suman sus exponentes<p>4. Los coeficientes literales que no son semejantes se copian en la respuesta, conjuntamente con su exponente. <html>");
        jLabel4.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 150, 1310, 120));

        jLabel5.setFont(new java.awt.Font("Palatino Linotype", 0, 18)); // NOI18N
        jLabel5.setText("<html>EJEMPLO: <p>a + b * 3a<p>1. Se multiplica el primer término del polinomio por el monomio multiplicador. Primero los signos, luego los coeficientes numerales y después los literales.<pre>                   a + b * 3a = 3a2 </pre>En este caso el primer término del polinomio es “a” y el monomio multiplicador es 3a, como los signos son iguales el signo del primer término de la respuesta es positivo, ahora multiplicamos los coeficientes numerales, en este caso 1 * 3 = 3, y finalmente las literales que por ser semejantes se copian una sola vez y se suman sus exponentes.<pre>                 a + b * 3a = 3a2 + 3ab </pre>2. Se multiplica el segundo término del polinomio por el monomio multiplicador. Primero los signos, luego los coeficientes numerales y después los literales, en este caso el segundo término del polinomio es “b” y el monomio multiplicador es 3a, como los signos son iguales, el signo del segundo término de la respuesta es positivo, ahora multiplicamos los coeficientes numerales, en este caso 1 * 3 = 3, y finalmente las literales como no son semejantes se copian una a la par de la otra con sus respectivos exponentes:<pre>                        Respuesta final: 3a2 + 3ab</pre> <html>");
        jLabel5.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 290, 1300, 370));

        jButton1.setBackground(new java.awt.Color(0, 102, 255));
        jButton1.setFont(new java.awt.Font("Palatino Linotype", 0, 14)); // NOI18N
        jButton1.setText("EJERCICIOS");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1240, 830, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    multialgebra tt=new multialgebra();
        tt.setSize(1643, 990);
        tt.setLocation(15,0);
        Principalpanel.removeAll();
        Principalpanel.add(tt,BorderLayout.CENTER);
        Principalpanel.revalidate();
        Principalpanel.repaint();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       multpolimonoejer tt=new multpolimonoejer();
        tt.setSize(1643, 990);
        tt.setLocation(15,0);
        Principalpanel.removeAll();
        Principalpanel.add(tt,BorderLayout.CENTER);
        Principalpanel.revalidate();
        Principalpanel.repaint();
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
