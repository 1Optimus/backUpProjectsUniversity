/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package finalproyecto;

import static finalproyecto.Mathe.Principalpanel;
import java.awt.BorderLayout;

/**
 *
 * @author Sergio Orozco
 */
public class multmono extends javax.swing.JPanel {

    /**
     * Creates new form multmono
     */
    public multmono() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        setBackground(new java.awt.Color(51, 204, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(153, 230, 225));

        jLabel1.setFont(new java.awt.Font("Palatino Linotype", 1, 18)); // NOI18N
        jLabel1.setText("Multiplicacion de Monomios");

        jButton1.setFont(new java.awt.Font("Palatino Linotype", 0, 14)); // NOI18N
        jButton1.setText("Multiplicacion algebraica");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 601, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 709, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(149, 149, 149))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE)
                .addComponent(jButton1))
        );

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1650, -1));

        jLabel5.setFont(new java.awt.Font("Palatino Linotype", 0, 18)); // NOI18N
        jLabel5.setText("<html>Para multiplicar monomios se deben seguir los siguientes pasos:<p><p>1.  Se aplica ley de signos a los términos que se van a operar<p>2.  Se multiplican los coeficientes numerales entre sí<p>3.  Los coeficientes literales que son semejantes entre los términos que se van a operar se copian una sola vez, y se suman sus exponentes<p>4.  Los coeficientes literales que no son semejantes se copian en la respuesta, conjuntamente con su exponente.<html>");
        jLabel5.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 1320, 170));

        jLabel4.setFont(new java.awt.Font("Palatino Linotype", 0, 18)); // NOI18N
        jLabel4.setText("<html><p>EJEMPLO: <p>2a *  a<p>1. Se aplica ley de signos a los términos que se van a operar, en este caso como ambos términos tienen signos positivos, (es decir<p>signos iguales)la respuesta tendrá signo positivo.  (ya sabemos que el signo positivo cuando va al inicio de una expresión matemática<p>no se consigna)<pre>                    2a *  a =</pre> 2. Se multiplican los coeficientes numerales entre sí, en este caso es     2 * 1 lo cual da como resultado 2.<pre>                  2a *  a =  2</pre>3. Los coeficientes literales que son semejantes entre los términos<p>que se van a operar se copian una sola vez, y se suman sus exponentes, en este caso<p>ambos términos tienen literal “a”, por lo tanto se copia una sola vez y se suman los exponentes de ambas, el exponente de la “a” del primer<p>término es 1 y el de la segunda también, por lo tanto al sumar 1 + 1 da como resultado dos. Por tanto en la respuesta colocamos “a” con exponente 2.<pre>                  2a *  a =  2 a^2<p> <html>");
        jLabel4.setToolTipText("");
        jLabel4.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 250, 1330, 420));

        jButton2.setBackground(new java.awt.Color(0, 153, 204));
        jButton2.setText("EJERCICIOS");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1270, 790, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       multialgebra tt=new multialgebra();
        tt.setSize(1643, 990);
        tt.setLocation(15,0);
        Principalpanel.removeAll();
        Principalpanel.add(tt,BorderLayout.CENTER);
        Principalpanel.revalidate();
        Principalpanel.repaint();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
          multmonoejercicio tt=new multmonoejercicio();
        tt.setSize(1643, 990);
        tt.setLocation(15,0);
        Principalpanel.removeAll();
        Principalpanel.add(tt,BorderLayout.CENTER);
        Principalpanel.revalidate();
        Principalpanel.repaint();
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
